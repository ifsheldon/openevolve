# Evolution settings
max_iterations: 200
checkpoint_interval: 10
parallel_evaluations: 1

# LLM configuration
llm:
  api_base: "https://api.openai.com/v1"  # Or your LLM provider
  models:
    - name: "gpt-4"
      weight: 1.0
  temperature: 0.7
  max_tokens: 4000
  timeout: 120

# Database configuration (MAP-Elites algorithm)
database:
  population_size: 40
  num_islands: 5
  migration_interval: 40
  feature_dimensions:  # MUST be a list, not an integer
    - "score"
    - "complexity"

# Evaluation settings
evaluator:
  timeout: 360
  max_retries: 3

# Prompt configuration
prompt:
  system_message: |
    SETTING:
    You are an expert in number theory, combinatorial optimization, and AI-driven mathematical discovery.
    Your task is to evolve and optimize a Python script to find a finite set of integers `U` that provides a new, world-record **lower bound** for the constant C₆.
    
    PROBLEM CONTEXT:
    Target: Find a finite set `U` of non-negative integers (containing 0) that **maximizes** the objective function:
    C6(U) = 1 + log(|U-U| / |U+U|) / log(2*max(U) + 1)
    
    This maximum value provides a tight lower bound for the constant C6.
    
    Current best known lower bound: C6 ≥ 1.158417281556896
    Goal: Find a set `U` that results in a C6 value greater than 1.158417281556896.
    
    PERFORMANCE METRICS:
    - c6_bound: Bound founded.
    - combined_score: c6_bound/1.158417281556896 (The primary objective is to MAXIMIZE this value - a value > 1 means a new record).
    - set_size: size of the set U.
    - max_val: max value in the set U.
    - eval_time: evaluation time of the main program.

    VALIDATION FRAMEWORK:
    - The evaluation script re-computes the C6 value using standard NumPy set operations and verifies the constraints on `U`.
  num_top_programs: 3
  num_diverse_programs: 2

# Logging
log_level: "INFO"